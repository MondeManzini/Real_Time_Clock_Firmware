|Maser_Vibration_Test_Jig
CLOCK_50 => RST_I_i.CLK
CLOCK_50 => \Reset_gen:cnt[0].CLK
CLOCK_50 => \Reset_gen:cnt[1].CLK
CLOCK_50 => \Reset_gen:cnt[2].CLK
CLOCK_50 => \Reset_gen:cnt[3].CLK
CLOCK_50 => \Reset_gen:cnt[4].CLK
CLOCK_50 => \Reset_gen:cnt[5].CLK
CLOCK_50 => \Reset_gen:cnt[6].CLK
CLOCK_50 => \Reset_gen:cnt[7].CLK
CLOCK_50 => Int_SCL_i.CLK
CLOCK_50 => LED[0]~reg0.CLK
CLOCK_50 => LED[1]~reg0.CLK
CLOCK_50 => LED[2]~reg0.CLK
CLOCK_50 => LED[3]~reg0.CLK
CLOCK_50 => LED[4]~reg0.CLK
CLOCK_50 => LED[5]~reg0.CLK
CLOCK_50 => LED[6]~reg0.CLK
CLOCK_50 => LED[7]~reg0.CLK
CLOCK_50 => maser_pushbutton_controller:Maser_PushButton_1.CLK_I
CLOCK_50 => maser_i2c_controller:Maser_i2c_Controller_1.CLK_I
CLOCK_50 => i2c_master:i2c_master_1.clk
CLOCK_50 => maser_mux_adxl345:Maser_Mux_ADXL345_1.Clk
CLOCK_50 => baud_rate_generator:Baud_Rate_Generator_1.Clk
KEY[0] => GPIO_0[9].DATAIN
KEY[0] => maser_pushbutton_controller:Maser_PushButton_1.PushButton_Start
KEY[1] => GPIO_0[11].DATAIN
KEY[1] => maser_pushbutton_controller:Maser_PushButton_1.PushButton_Stop
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
LED[0] <= LED[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[1] <= LED[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[2] <= LED[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[3] <= LED[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[4] <= LED[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[5] <= LED[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[6] <= LED[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LED[7] <= LED[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
I2C_SCLK <= comb.DB_MAX_OUTPUT_PORT_TYPE
I2C_SDAT <> <UNC>
GPIO_2_UP[0] <> <UNC>
GPIO_2_UP[1] <> <UNC>
GPIO_2_UP[2] <> <UNC>
GPIO_2[0] <> <UNC>
GPIO_2[1] <> <UNC>
GPIO_2[2] <> <UNC>
GPIO_2[3] <> <UNC>
GPIO_2[4] <> <UNC>
GPIO_2[5] <> <UNC>
GPIO_2[6] <> <UNC>
GPIO_2[7] <> <UNC>
GPIO_2[8] <> <UNC>
GPIO_2_IN[0] => ~NO_FANOUT~
GPIO_2_IN[1] => ~NO_FANOUT~
GPIO_2_IN[2] => ~NO_FANOUT~
GPIO_0[0] <> GPIO_0[0]
GPIO_0[1] <> i2c_master:i2c_master_1.sda
GPIO_0[2] <> <UNC>
GPIO_0[3] <> <UNC>
GPIO_0[4] <> <UNC>
GPIO_0[5] <> GPIO_0[5]
GPIO_0[6] <> <UNC>
GPIO_0[7] <> GPIO_0[7]
GPIO_0[8] <> <UNC>
GPIO_0[9] <> GPIO_0[9]
GPIO_0[10] <> <UNC>
GPIO_0[11] <> GPIO_0[11]
GPIO_0[12] <> <UNC>
GPIO_0[13] <> GPIO_0[13]
GPIO_0[14] <> <UNC>
GPIO_0[15] <> GPIO_0[15]
GPIO_0[16] <> <UNC>
GPIO_0[17] <> GPIO_0[17]
GPIO_0[18] <> <UNC>
GPIO_0[19] <> GPIO_0[19]
GPIO_0[20] <> <UNC>
GPIO_0[21] <> GPIO_0[21]
GPIO_0[22] <> <UNC>
GPIO_0[23] <> GPIO_0[23]
GPIO_0[24] <> <UNC>
GPIO_0[25] <> GPIO_0[25]
GPIO_0[26] <> <UNC>
GPIO_0[27] <> GPIO_0[27]
GPIO_0[28] <> GPIO_0[28]
GPIO_0[29] <> GPIO_0[29]
GPIO_0[30] <> GPIO_0[30]
GPIO_0[31] <> GPIO_0[31]
GPIO_0[32] <> GPIO_0[32]
GPIO_0[33] <> GPIO_0[33]
GPIO_0_IN[0] => ~NO_FANOUT~
GPIO_0_IN[1] => ~NO_FANOUT~
GPIO_1[0] <> <UNC>
GPIO_1[1] <> <UNC>
GPIO_1[2] <> GPIO_1[2]
GPIO_1[3] <> <UNC>
GPIO_1[4] <> <UNC>
GPIO_1[5] <> <UNC>
GPIO_1[6] <> <UNC>
GPIO_1[7] <> <UNC>
GPIO_1[8] <> <UNC>
GPIO_1[9] <> <UNC>
GPIO_1[10] <> <UNC>
GPIO_1[11] <> <UNC>
GPIO_1[12] <> <UNC>
GPIO_1[13] <> <UNC>
GPIO_1[14] <> <UNC>
GPIO_1[15] <> <UNC>
GPIO_1[16] <> <UNC>
GPIO_1[17] <> <UNC>
GPIO_1[18] <> <UNC>
GPIO_1[19] <> <UNC>
GPIO_1[20] <> <UNC>
GPIO_1[21] <> <UNC>
GPIO_1[22] <> <UNC>
GPIO_1[23] <> <UNC>
GPIO_1[24] <> <UNC>
GPIO_1[25] <> <UNC>
GPIO_1[26] <> <UNC>
GPIO_1[27] <> <UNC>
GPIO_1[28] <> <UNC>
GPIO_1[29] <> <UNC>
GPIO_1[30] <> <UNC>
GPIO_1[31] <> <UNC>
GPIO_1[32] <> <UNC>
GPIO_1[33] <> <UNC>
GPIO_1_IN[0] => ~NO_FANOUT~
GPIO_1_IN[1] => ~NO_FANOUT~


|Maser_Vibration_Test_Jig|Maser_PushButton_Controller:Maser_PushButton_1
CLK_I => LockOut.CLK
CLK_I => Start_i.CLK
CLK_I => \PushButton_Mux:Count[0].CLK
CLK_I => \PushButton_Mux:Count[1].CLK
CLK_I => \PushButton_Mux:Count[2].CLK
CLK_I => \PushButton_Mux:Count[3].CLK
CLK_I => \PushButton_Mux:Count[4].CLK
RST_I => LockOut.ACLR
RST_I => Start_i.ACLR
RST_I => \PushButton_Mux:Count[0].ACLR
RST_I => \PushButton_Mux:Count[1].ACLR
RST_I => \PushButton_Mux:Count[2].ACLR
RST_I => \PushButton_Mux:Count[3].ACLR
RST_I => \PushButton_Mux:Count[4].ACLR
PushButton_Start => PushButton_Mux.IN1
PushButton_Start => PushButton_Mux.IN1
PushButton_Start => PushButton_Mux.IN1
PushButton_Stop => PushButton_Mux.IN1
Initialization_Complete => LockOut.ENA
Initialization_Complete => \PushButton_Mux:Count[4].ENA
Initialization_Complete => \PushButton_Mux:Count[3].ENA
Initialization_Complete => \PushButton_Mux:Count[2].ENA
Initialization_Complete => \PushButton_Mux:Count[1].ENA
Initialization_Complete => \PushButton_Mux:Count[0].ENA
Initialization_Complete => Start_i.ENA
Start <= Start_i.DB_MAX_OUTPUT_PORT_TYPE


|Maser_Vibration_Test_Jig|Maser_i2c_Controller:Maser_i2c_Controller_1
RST_I => i2c_ReadData_State.TestStop.OUTPUTSELECT
RST_I => i2c_ReadData_State.Wait_Data.OUTPUTSELECT
RST_I => i2c_ReadData_State.Wait_Read.OUTPUTSELECT
RST_I => i2c_ReadData_State.Wait_Address.OUTPUTSELECT
RST_I => i2c_ReadData_State.i2c_Idle.OUTPUTSELECT
RST_I => i2c_Intialization_State.initialzation_Complete.OUTPUTSELECT
RST_I => i2c_Intialization_State.StopInitialization.OUTPUTSELECT
RST_I => i2c_Intialization_State.Wait_Busy_Low.OUTPUTSELECT
RST_I => i2c_Intialization_State.Wait_Byte_Write.OUTPUTSELECT
RST_I => i2c_Intialization_State.WaitnBusy.OUTPUTSELECT
RST_I => i2c_Intialization_State.LoadData.OUTPUTSELECT
RST_I => i2c_Intialization_State.i2c_Idle.OUTPUTSELECT
RST_I => initialation_Status_i.ACLR
RST_I => Slave_Data_i[0].ACLR
RST_I => Slave_Data_i[1].ACLR
RST_I => Slave_Data_i[2].ACLR
RST_I => Slave_Data_i[3].ACLR
RST_I => Slave_Data_i[4].ACLR
RST_I => Slave_Data_i[5].ACLR
RST_I => Slave_Data_i[6].ACLR
RST_I => Slave_Data_i[7].ACLR
RST_I => Ready_i.ACLR
RST_I => Enable_i.ACLR
RST_I => Slave_Register_i[0].PRESET
RST_I => Slave_Register_i[1].ACLR
RST_I => Slave_Register_i[2].PRESET
RST_I => Slave_Register_i[3].PRESET
RST_I => Slave_Register_i[4].PRESET
RST_I => Slave_Register_i[5].ACLR
RST_I => Slave_Register_i[6].ACLR
RST_I => Slave_Register_i[7].ACLR
RST_I => \Maser_i2c_Control:Config_Count[0].ACLR
RST_I => \Maser_i2c_Control:Config_Count[1].ACLR
RST_I => \Maser_i2c_Control:Config_Count[2].ACLR
RST_I => \Maser_i2c_Control:Config_Count[3].ACLR
RST_I => \Maser_i2c_Control:Config_Count[4].ACLR
RST_I => \Maser_i2c_Control:Count[0].ACLR
RST_I => \Maser_i2c_Control:Count[1].ACLR
RST_I => \Maser_i2c_Control:Count[2].ACLR
RST_I => \Maser_i2c_Control:Count[3].ACLR
RST_I => \Maser_i2c_Control:Count[4].ACLR
RST_I => \Maser_i2c_Control:Count[5].ACLR
RST_I => \Maser_i2c_Control:Count[6].ACLR
RST_I => \Maser_i2c_Control:Count[7].ACLR
RST_I => i2c_Controller_State~6.DATAIN
RST_I => FIFO_Status_i[0].ENA
RST_I => \Maser_i2c_Control:Read_Count[3].ENA
RST_I => \Maser_i2c_Control:Read_Count[2].ENA
RST_I => \Maser_i2c_Control:Read_Count[1].ENA
RST_I => Slave_Address_Out[6]~reg0.ENA
RST_I => Slave_Address_Out[5]~reg0.ENA
RST_I => Slave_Address_Out[4]~reg0.ENA
RST_I => Slave_Address_Out[3]~reg0.ENA
RST_I => Slave_Address_Out[2]~reg0.ENA
RST_I => Slave_Address_Out[1]~reg0.ENA
RST_I => Slave_Address_Out[0]~reg0.ENA
RST_I => Slave_read_nWrite~reg0.ENA
RST_I => Config_i[7].ENA
RST_I => Config_i[6].ENA
RST_I => Config_i[5].ENA
RST_I => Config_i[4].ENA
RST_I => Config_i[3].ENA
RST_I => Config_i[2].ENA
RST_I => Config_i[1].ENA
RST_I => Config_i[0].ENA
RST_I => Address_Lock_i.ENA
RST_I => ADXL345_X_i[15].ENA
RST_I => ADXL345_X_i[14].ENA
RST_I => ADXL345_X_i[13].ENA
RST_I => ADXL345_X_i[12].ENA
RST_I => ADXL345_X_i[11].ENA
RST_I => ADXL345_X_i[10].ENA
RST_I => ADXL345_X_i[9].ENA
RST_I => ADXL345_X_i[8].ENA
RST_I => ADXL345_X_i[7].ENA
RST_I => ADXL345_X_i[6].ENA
RST_I => ADXL345_X_i[5].ENA
RST_I => ADXL345_X_i[4].ENA
RST_I => ADXL345_X_i[3].ENA
RST_I => ADXL345_X_i[2].ENA
RST_I => ADXL345_X_i[1].ENA
RST_I => ADXL345_X_i[0].ENA
RST_I => ADXL345_Y_i[15].ENA
RST_I => ADXL345_Y_i[14].ENA
RST_I => ADXL345_Y_i[13].ENA
RST_I => ADXL345_Y_i[12].ENA
RST_I => ADXL345_Y_i[11].ENA
RST_I => ADXL345_Y_i[10].ENA
RST_I => ADXL345_Y_i[9].ENA
RST_I => ADXL345_Y_i[8].ENA
RST_I => ADXL345_Y_i[7].ENA
RST_I => ADXL345_Y_i[6].ENA
RST_I => ADXL345_Y_i[5].ENA
RST_I => ADXL345_Y_i[4].ENA
RST_I => ADXL345_Y_i[3].ENA
RST_I => ADXL345_Y_i[2].ENA
RST_I => ADXL345_Y_i[1].ENA
RST_I => ADXL345_Y_i[0].ENA
RST_I => ADXL345_Z_i[15].ENA
RST_I => ADXL345_Z_i[14].ENA
RST_I => ADXL345_Z_i[13].ENA
RST_I => ADXL345_Z_i[12].ENA
RST_I => ADXL345_Z_i[11].ENA
RST_I => ADXL345_Z_i[10].ENA
RST_I => ADXL345_Z_i[9].ENA
RST_I => ADXL345_Z_i[8].ENA
RST_I => ADXL345_Z_i[7].ENA
RST_I => ADXL345_Z_i[6].ENA
RST_I => ADXL345_Z_i[5].ENA
RST_I => ADXL345_Z_i[4].ENA
RST_I => ADXL345_Z_i[3].ENA
RST_I => ADXL345_Z_i[2].ENA
RST_I => ADXL345_Z_i[1].ENA
RST_I => ADXL345_Z_i[0].ENA
RST_I => FIFO_CTL_i[7].ENA
RST_I => FIFO_CTL_i[6].ENA
RST_I => FIFO_CTL_i[5].ENA
RST_I => FIFO_CTL_i[4].ENA
RST_I => FIFO_CTL_i[3].ENA
RST_I => FIFO_CTL_i[2].ENA
RST_I => FIFO_CTL_i[1].ENA
RST_I => FIFO_CTL_i[0].ENA
RST_I => FIFO_Status_i[7].ENA
RST_I => FIFO_Status_i[6].ENA
RST_I => FIFO_Status_i[5].ENA
RST_I => FIFO_Status_i[4].ENA
RST_I => FIFO_Status_i[3].ENA
RST_I => FIFO_Status_i[2].ENA
RST_I => FIFO_Status_i[1].ENA
RST_I => \Maser_i2c_Control:Read_Count[0].ENA
CLK_I => FIFO_Status_i[0].CLK
CLK_I => FIFO_Status_i[1].CLK
CLK_I => FIFO_Status_i[2].CLK
CLK_I => FIFO_Status_i[3].CLK
CLK_I => FIFO_Status_i[4].CLK
CLK_I => FIFO_Status_i[5].CLK
CLK_I => FIFO_Status_i[6].CLK
CLK_I => FIFO_Status_i[7].CLK
CLK_I => FIFO_CTL_i[0].CLK
CLK_I => FIFO_CTL_i[1].CLK
CLK_I => FIFO_CTL_i[2].CLK
CLK_I => FIFO_CTL_i[3].CLK
CLK_I => FIFO_CTL_i[4].CLK
CLK_I => FIFO_CTL_i[5].CLK
CLK_I => FIFO_CTL_i[6].CLK
CLK_I => FIFO_CTL_i[7].CLK
CLK_I => ADXL345_Z_i[0].CLK
CLK_I => ADXL345_Z_i[1].CLK
CLK_I => ADXL345_Z_i[2].CLK
CLK_I => ADXL345_Z_i[3].CLK
CLK_I => ADXL345_Z_i[4].CLK
CLK_I => ADXL345_Z_i[5].CLK
CLK_I => ADXL345_Z_i[6].CLK
CLK_I => ADXL345_Z_i[7].CLK
CLK_I => ADXL345_Z_i[8].CLK
CLK_I => ADXL345_Z_i[9].CLK
CLK_I => ADXL345_Z_i[10].CLK
CLK_I => ADXL345_Z_i[11].CLK
CLK_I => ADXL345_Z_i[12].CLK
CLK_I => ADXL345_Z_i[13].CLK
CLK_I => ADXL345_Z_i[14].CLK
CLK_I => ADXL345_Z_i[15].CLK
CLK_I => ADXL345_Y_i[0].CLK
CLK_I => ADXL345_Y_i[1].CLK
CLK_I => ADXL345_Y_i[2].CLK
CLK_I => ADXL345_Y_i[3].CLK
CLK_I => ADXL345_Y_i[4].CLK
CLK_I => ADXL345_Y_i[5].CLK
CLK_I => ADXL345_Y_i[6].CLK
CLK_I => ADXL345_Y_i[7].CLK
CLK_I => ADXL345_Y_i[8].CLK
CLK_I => ADXL345_Y_i[9].CLK
CLK_I => ADXL345_Y_i[10].CLK
CLK_I => ADXL345_Y_i[11].CLK
CLK_I => ADXL345_Y_i[12].CLK
CLK_I => ADXL345_Y_i[13].CLK
CLK_I => ADXL345_Y_i[14].CLK
CLK_I => ADXL345_Y_i[15].CLK
CLK_I => ADXL345_X_i[0].CLK
CLK_I => ADXL345_X_i[1].CLK
CLK_I => ADXL345_X_i[2].CLK
CLK_I => ADXL345_X_i[3].CLK
CLK_I => ADXL345_X_i[4].CLK
CLK_I => ADXL345_X_i[5].CLK
CLK_I => ADXL345_X_i[6].CLK
CLK_I => ADXL345_X_i[7].CLK
CLK_I => ADXL345_X_i[8].CLK
CLK_I => ADXL345_X_i[9].CLK
CLK_I => ADXL345_X_i[10].CLK
CLK_I => ADXL345_X_i[11].CLK
CLK_I => ADXL345_X_i[12].CLK
CLK_I => ADXL345_X_i[13].CLK
CLK_I => ADXL345_X_i[14].CLK
CLK_I => ADXL345_X_i[15].CLK
CLK_I => Address_Lock_i.CLK
CLK_I => Config_i[0].CLK
CLK_I => Config_i[1].CLK
CLK_I => Config_i[2].CLK
CLK_I => Config_i[3].CLK
CLK_I => Config_i[4].CLK
CLK_I => Config_i[5].CLK
CLK_I => Config_i[6].CLK
CLK_I => Config_i[7].CLK
CLK_I => Slave_read_nWrite~reg0.CLK
CLK_I => Slave_Address_Out[0]~reg0.CLK
CLK_I => Slave_Address_Out[1]~reg0.CLK
CLK_I => Slave_Address_Out[2]~reg0.CLK
CLK_I => Slave_Address_Out[3]~reg0.CLK
CLK_I => Slave_Address_Out[4]~reg0.CLK
CLK_I => Slave_Address_Out[5]~reg0.CLK
CLK_I => Slave_Address_Out[6]~reg0.CLK
CLK_I => initialation_Status_i.CLK
CLK_I => Slave_Data_i[0].CLK
CLK_I => Slave_Data_i[1].CLK
CLK_I => Slave_Data_i[2].CLK
CLK_I => Slave_Data_i[3].CLK
CLK_I => Slave_Data_i[4].CLK
CLK_I => Slave_Data_i[5].CLK
CLK_I => Slave_Data_i[6].CLK
CLK_I => Slave_Data_i[7].CLK
CLK_I => Ready_i.CLK
CLK_I => Enable_i.CLK
CLK_I => Slave_Register_i[0].CLK
CLK_I => Slave_Register_i[1].CLK
CLK_I => Slave_Register_i[2].CLK
CLK_I => Slave_Register_i[3].CLK
CLK_I => Slave_Register_i[4].CLK
CLK_I => Slave_Register_i[5].CLK
CLK_I => Slave_Register_i[6].CLK
CLK_I => Slave_Register_i[7].CLK
CLK_I => \Maser_i2c_Control:Read_Count[0].CLK
CLK_I => \Maser_i2c_Control:Read_Count[1].CLK
CLK_I => \Maser_i2c_Control:Read_Count[2].CLK
CLK_I => \Maser_i2c_Control:Read_Count[3].CLK
CLK_I => \Maser_i2c_Control:Config_Count[0].CLK
CLK_I => \Maser_i2c_Control:Config_Count[1].CLK
CLK_I => \Maser_i2c_Control:Config_Count[2].CLK
CLK_I => \Maser_i2c_Control:Config_Count[3].CLK
CLK_I => \Maser_i2c_Control:Config_Count[4].CLK
CLK_I => \Maser_i2c_Control:Count[0].CLK
CLK_I => \Maser_i2c_Control:Count[1].CLK
CLK_I => \Maser_i2c_Control:Count[2].CLK
CLK_I => \Maser_i2c_Control:Count[3].CLK
CLK_I => \Maser_i2c_Control:Count[4].CLK
CLK_I => \Maser_i2c_Control:Count[5].CLK
CLK_I => \Maser_i2c_Control:Count[6].CLK
CLK_I => \Maser_i2c_Control:Count[7].CLK
CLK_I => i2c_ReadData_State~6.DATAIN
CLK_I => i2c_Intialization_State~8.DATAIN
CLK_I => i2c_Controller_State~4.DATAIN
Busy => Maser_i2c_Control.IN1
Busy => Maser_i2c_Control.IN1
Busy => Enable_i.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Selector27.IN5
Busy => Selector29.IN5
Busy => Maser_i2c_Control.IN1
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_read_nWrite.OUTPUTSELECT
Busy => Read_Count.OUTPUTSELECT
Busy => Read_Count.OUTPUTSELECT
Busy => Read_Count.OUTPUTSELECT
Busy => Read_Count.OUTPUTSELECT
Busy => i2c_ReadData_State.OUTPUTSELECT
Busy => i2c_ReadData_State.OUTPUTSELECT
Busy => i2c_ReadData_State.OUTPUTSELECT
Busy => i2c_ReadData_State.OUTPUTSELECT
Busy => i2c_ReadData_State.OUTPUTSELECT
Busy => Maser_i2c_Control.IN1
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_Address_Out.OUTPUTSELECT
Busy => Slave_read_nWrite.OUTPUTSELECT
Busy => Slave_Data_i.OUTPUTSELECT
Busy => Slave_Data_i.OUTPUTSELECT
Busy => Slave_Data_i.OUTPUTSELECT
Busy => Slave_Data_i.OUTPUTSELECT
Busy => Slave_Data_i.OUTPUTSELECT
Busy => Slave_Data_i.OUTPUTSELECT
Busy => Slave_Data_i.OUTPUTSELECT
Busy => Slave_Data_i.OUTPUTSELECT
Busy => Enable_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Intialization_State.OUTPUTSELECT
Busy => i2c_Controller_State.OUTPUTSELECT
Busy => i2c_Controller_State.OUTPUTSELECT
Busy => i2c_Controller_State.OUTPUTSELECT
Busy => initialation_Status_i.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Count.OUTPUTSELECT
Busy => Selector28.IN1
Busy => Address_Lock_i.OUTPUTSELECT
Busy => i2c_ReadData_State.OUTPUTSELECT
Busy => i2c_ReadData_State.OUTPUTSELECT
Busy => i2c_ReadData_State.OUTPUTSELECT
Busy => i2c_ReadData_State.OUTPUTSELECT
Busy => i2c_ReadData_State.OUTPUTSELECT
Busy => Maser_i2c_Control.IN1
Busy => Maser_i2c_Control.IN1
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Config_i.OUTPUTSELECT
Busy => Slave_Register_i.OUTPUTSELECT
Busy => Slave_Register_i.OUTPUTSELECT
Busy => Slave_Register_i.OUTPUTSELECT
Busy => Slave_Register_i.OUTPUTSELECT
Busy => Slave_Register_i.OUTPUTSELECT
Busy => Slave_Register_i.OUTPUTSELECT
Busy => Slave_Register_i.OUTPUTSELECT
Busy => Slave_Register_i.OUTPUTSELECT
Busy => Selector29.IN0
Busy => Maser_i2c_Control.IN1
data_read[0] => ADXL345_X_i.DATAB
data_read[0] => ADXL345_Y_i.DATAB
data_read[0] => ADXL345_Y_i.DATAB
data_read[0] => ADXL345_Z_i.DATAB
data_read[0] => ADXL345_Z_i.DATAB
data_read[0] => FIFO_CTL_i.DATAB
data_read[0] => FIFO_Status_i.DATAB
data_read[1] => ADXL345_X_i.DATAB
data_read[1] => ADXL345_Y_i.DATAB
data_read[1] => ADXL345_Y_i.DATAB
data_read[1] => ADXL345_Z_i.DATAB
data_read[1] => ADXL345_Z_i.DATAB
data_read[1] => FIFO_CTL_i.DATAB
data_read[1] => FIFO_Status_i.DATAB
data_read[2] => ADXL345_X_i.DATAB
data_read[2] => ADXL345_Y_i.DATAB
data_read[2] => ADXL345_Y_i.DATAB
data_read[2] => ADXL345_Z_i.DATAB
data_read[2] => ADXL345_Z_i.DATAB
data_read[2] => FIFO_CTL_i.DATAB
data_read[2] => FIFO_Status_i.DATAB
data_read[3] => ADXL345_X_i.DATAB
data_read[3] => ADXL345_Y_i.DATAB
data_read[3] => ADXL345_Y_i.DATAB
data_read[3] => ADXL345_Z_i.DATAB
data_read[3] => ADXL345_Z_i.DATAB
data_read[3] => FIFO_CTL_i.DATAB
data_read[3] => FIFO_Status_i.DATAB
data_read[4] => ADXL345_X_i.DATAB
data_read[4] => ADXL345_Y_i.DATAB
data_read[4] => ADXL345_Y_i.DATAB
data_read[4] => ADXL345_Z_i.DATAB
data_read[4] => ADXL345_Z_i.DATAB
data_read[4] => FIFO_CTL_i.DATAB
data_read[4] => FIFO_Status_i.DATAB
data_read[5] => ADXL345_X_i.DATAB
data_read[5] => ADXL345_Y_i.DATAB
data_read[5] => ADXL345_Y_i.DATAB
data_read[5] => ADXL345_Z_i.DATAB
data_read[5] => ADXL345_Z_i.DATAB
data_read[5] => FIFO_CTL_i.DATAB
data_read[5] => FIFO_Status_i.DATAB
data_read[6] => ADXL345_X_i.DATAB
data_read[6] => ADXL345_Y_i.DATAB
data_read[6] => ADXL345_Y_i.DATAB
data_read[6] => ADXL345_Z_i.DATAB
data_read[6] => ADXL345_Z_i.DATAB
data_read[6] => FIFO_CTL_i.DATAB
data_read[6] => FIFO_Status_i.DATAB
data_read[7] => ADXL345_X_i.DATAB
data_read[7] => ADXL345_Y_i.DATAB
data_read[7] => ADXL345_Y_i.DATAB
data_read[7] => ADXL345_Z_i.DATAB
data_read[7] => ADXL345_Z_i.DATAB
data_read[7] => FIFO_CTL_i.DATAB
data_read[7] => FIFO_Status_i.DATAB
ack_error => ~NO_FANOUT~
initialation_Status <= initialation_Status_i.DB_MAX_OUTPUT_PORT_TYPE
Enable <= Enable_i.DB_MAX_OUTPUT_PORT_TYPE
Slave_Address_Out[0] <= Slave_Address_Out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Slave_Address_Out[1] <= Slave_Address_Out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Slave_Address_Out[2] <= Slave_Address_Out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Slave_Address_Out[3] <= Slave_Address_Out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Slave_Address_Out[4] <= Slave_Address_Out[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Slave_Address_Out[5] <= Slave_Address_Out[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Slave_Address_Out[6] <= Slave_Address_Out[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Slave_read_nWrite <= Slave_read_nWrite~reg0.DB_MAX_OUTPUT_PORT_TYPE
Slave_Data_Out[0] <= Slave_Data_i[0].DB_MAX_OUTPUT_PORT_TYPE
Slave_Data_Out[1] <= Slave_Data_i[1].DB_MAX_OUTPUT_PORT_TYPE
Slave_Data_Out[2] <= Slave_Data_i[2].DB_MAX_OUTPUT_PORT_TYPE
Slave_Data_Out[3] <= Slave_Data_i[3].DB_MAX_OUTPUT_PORT_TYPE
Slave_Data_Out[4] <= Slave_Data_i[4].DB_MAX_OUTPUT_PORT_TYPE
Slave_Data_Out[5] <= Slave_Data_i[5].DB_MAX_OUTPUT_PORT_TYPE
Slave_Data_Out[6] <= Slave_Data_i[6].DB_MAX_OUTPUT_PORT_TYPE
Slave_Data_Out[7] <= Slave_Data_i[7].DB_MAX_OUTPUT_PORT_TYPE
Start => ~NO_FANOUT~
Get_Sample => i2c_ReadData_State.OUTPUTSELECT
Get_Sample => i2c_ReadData_State.OUTPUTSELECT
Get_Sample => i2c_ReadData_State.OUTPUTSELECT
Get_Sample => i2c_ReadData_State.OUTPUTSELECT
Get_Sample => i2c_ReadData_State.OUTPUTSELECT
Get_Sample => Read_Count.OUTPUTSELECT
Get_Sample => Read_Count.OUTPUTSELECT
Get_Sample => Read_Count.OUTPUTSELECT
Get_Sample => Read_Count.OUTPUTSELECT
Get_Sample => Slave_Register_i.OUTPUTSELECT
Get_Sample => Slave_Register_i.OUTPUTSELECT
Get_Sample => Slave_Register_i.OUTPUTSELECT
Get_Sample => Slave_Register_i.OUTPUTSELECT
Get_Sample => Slave_Register_i.OUTPUTSELECT
Get_Sample => Slave_Register_i.OUTPUTSELECT
Get_Sample => Slave_Register_i.OUTPUTSELECT
Get_Sample => Slave_Register_i.OUTPUTSELECT
Get_Sample => Selector84.IN2
Get_Sample => Selector82.IN1
ADXL345_X[0] <= ADXL345_X_i[0].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[1] <= ADXL345_X_i[1].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[2] <= ADXL345_X_i[2].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[3] <= ADXL345_X_i[3].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[4] <= ADXL345_X_i[4].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[5] <= ADXL345_X_i[5].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[6] <= ADXL345_X_i[6].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[7] <= ADXL345_X_i[7].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[8] <= ADXL345_X_i[8].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[9] <= ADXL345_X_i[9].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[10] <= ADXL345_X_i[10].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[11] <= ADXL345_X_i[11].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[12] <= ADXL345_X_i[12].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[13] <= ADXL345_X_i[13].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[14] <= ADXL345_X_i[14].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_X[15] <= ADXL345_X_i[15].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[0] <= ADXL345_Y_i[0].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[1] <= ADXL345_Y_i[1].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[2] <= ADXL345_Y_i[2].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[3] <= ADXL345_Y_i[3].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[4] <= ADXL345_Y_i[4].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[5] <= ADXL345_Y_i[5].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[6] <= ADXL345_Y_i[6].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[7] <= ADXL345_Y_i[7].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[8] <= ADXL345_Y_i[8].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[9] <= ADXL345_Y_i[9].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[10] <= ADXL345_Y_i[10].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[11] <= ADXL345_Y_i[11].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[12] <= ADXL345_Y_i[12].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[13] <= ADXL345_Y_i[13].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[14] <= ADXL345_Y_i[14].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Y[15] <= ADXL345_Y_i[15].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[0] <= ADXL345_Z_i[0].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[1] <= ADXL345_Z_i[1].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[2] <= ADXL345_Z_i[2].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[3] <= ADXL345_Z_i[3].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[4] <= ADXL345_Z_i[4].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[5] <= ADXL345_Z_i[5].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[6] <= ADXL345_Z_i[6].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[7] <= ADXL345_Z_i[7].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[8] <= ADXL345_Z_i[8].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[9] <= ADXL345_Z_i[9].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[10] <= ADXL345_Z_i[10].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[11] <= ADXL345_Z_i[11].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[12] <= ADXL345_Z_i[12].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[13] <= ADXL345_Z_i[13].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[14] <= ADXL345_Z_i[14].DB_MAX_OUTPUT_PORT_TYPE
ADXL345_Z[15] <= ADXL345_Z_i[15].DB_MAX_OUTPUT_PORT_TYPE
FIFO_CTL[0] <= FIFO_CTL_i[0].DB_MAX_OUTPUT_PORT_TYPE
FIFO_CTL[1] <= FIFO_CTL_i[1].DB_MAX_OUTPUT_PORT_TYPE
FIFO_CTL[2] <= FIFO_CTL_i[2].DB_MAX_OUTPUT_PORT_TYPE
FIFO_CTL[3] <= FIFO_CTL_i[3].DB_MAX_OUTPUT_PORT_TYPE
FIFO_CTL[4] <= FIFO_CTL_i[4].DB_MAX_OUTPUT_PORT_TYPE
FIFO_CTL[5] <= FIFO_CTL_i[5].DB_MAX_OUTPUT_PORT_TYPE
FIFO_CTL[6] <= FIFO_CTL_i[6].DB_MAX_OUTPUT_PORT_TYPE
FIFO_CTL[7] <= FIFO_CTL_i[7].DB_MAX_OUTPUT_PORT_TYPE
FIFO_Status[0] <= FIFO_Status_i[0].DB_MAX_OUTPUT_PORT_TYPE
FIFO_Status[1] <= FIFO_Status_i[1].DB_MAX_OUTPUT_PORT_TYPE
FIFO_Status[2] <= FIFO_Status_i[2].DB_MAX_OUTPUT_PORT_TYPE
FIFO_Status[3] <= FIFO_Status_i[3].DB_MAX_OUTPUT_PORT_TYPE
FIFO_Status[4] <= FIFO_Status_i[4].DB_MAX_OUTPUT_PORT_TYPE
FIFO_Status[5] <= FIFO_Status_i[5].DB_MAX_OUTPUT_PORT_TYPE
FIFO_Status[6] <= FIFO_Status_i[6].DB_MAX_OUTPUT_PORT_TYPE
FIFO_Status[7] <= FIFO_Status_i[7].DB_MAX_OUTPUT_PORT_TYPE
Ready <= Ready_i.DB_MAX_OUTPUT_PORT_TYPE


|Maser_Vibration_Test_Jig|i2c_master:i2c_master_1
clk => data_tx[0].CLK
clk => data_tx[1].CLK
clk => data_tx[2].CLK
clk => data_tx[3].CLK
clk => data_tx[4].CLK
clk => data_tx[5].CLK
clk => data_tx[6].CLK
clk => data_tx[7].CLK
clk => addr_rw[0].CLK
clk => addr_rw[1].CLK
clk => addr_rw[2].CLK
clk => addr_rw[3].CLK
clk => addr_rw[4].CLK
clk => addr_rw[5].CLK
clk => addr_rw[6].CLK
clk => addr_rw[7].CLK
clk => data_rx[0].CLK
clk => data_rx[1].CLK
clk => data_rx[2].CLK
clk => data_rx[3].CLK
clk => data_rx[4].CLK
clk => data_rx[5].CLK
clk => data_rx[6].CLK
clk => data_rx[7].CLK
clk => data_rd[0]~reg0.CLK
clk => data_rd[1]~reg0.CLK
clk => data_rd[2]~reg0.CLK
clk => data_rd[3]~reg0.CLK
clk => data_rd[4]~reg0.CLK
clk => data_rd[5]~reg0.CLK
clk => data_rd[6]~reg0.CLK
clk => data_rd[7]~reg0.CLK
clk => bit_cnt[0].CLK
clk => bit_cnt[1].CLK
clk => bit_cnt[2].CLK
clk => ack_error~reg0.CLK
clk => sda_int.CLK
clk => scl_ena.CLK
clk => busy~reg0.CLK
clk => data_clk.CLK
clk => scl_clk.CLK
clk => data_clk_prev.CLK
clk => stretch.CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => state~1.DATAIN
reset_n => data_rx[0].ACLR
reset_n => data_rx[1].ACLR
reset_n => data_rx[2].ACLR
reset_n => data_rx[3].ACLR
reset_n => data_rx[4].ACLR
reset_n => data_rx[5].ACLR
reset_n => data_rx[6].ACLR
reset_n => data_rx[7].ACLR
reset_n => data_rd[0]~reg0.ACLR
reset_n => data_rd[1]~reg0.ACLR
reset_n => data_rd[2]~reg0.ACLR
reset_n => data_rd[3]~reg0.ACLR
reset_n => data_rd[4]~reg0.ACLR
reset_n => data_rd[5]~reg0.ACLR
reset_n => data_rd[6]~reg0.ACLR
reset_n => data_rd[7]~reg0.ACLR
reset_n => bit_cnt[0].PRESET
reset_n => bit_cnt[1].PRESET
reset_n => bit_cnt[2].PRESET
reset_n => ack_error~reg0.ACLR
reset_n => sda_int.PRESET
reset_n => scl_ena.ACLR
reset_n => busy~reg0.PRESET
reset_n => stretch.ACLR
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => state~3.DATAIN
reset_n => data_clk_prev.ENA
reset_n => scl_clk.ENA
reset_n => data_clk.ENA
reset_n => addr_rw[7].ENA
reset_n => addr_rw[6].ENA
reset_n => addr_rw[5].ENA
reset_n => addr_rw[4].ENA
reset_n => addr_rw[3].ENA
reset_n => addr_rw[2].ENA
reset_n => addr_rw[1].ENA
reset_n => addr_rw[0].ENA
reset_n => data_tx[7].ENA
reset_n => data_tx[6].ENA
reset_n => data_tx[5].ENA
reset_n => data_tx[4].ENA
reset_n => data_tx[3].ENA
reset_n => data_tx[2].ENA
reset_n => data_tx[1].ENA
reset_n => data_tx[0].ENA
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => addr_rw.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => data_tx.OUTPUTSELECT
ena => process_1.IN1
ena => busy.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => state.OUTPUTSELECT
ena => sda_int.OUTPUTSELECT
ena => Selector0.IN6
ena => Selector18.IN4
ena => Selector17.IN2
ena => Selector22.IN1
addr[0] => addr_rw.DATAB
addr[0] => Equal2.IN6
addr[1] => addr_rw.DATAB
addr[1] => Equal2.IN5
addr[2] => addr_rw.DATAB
addr[2] => Equal2.IN4
addr[3] => addr_rw.DATAB
addr[3] => Equal2.IN3
addr[4] => addr_rw.DATAB
addr[4] => Equal2.IN2
addr[5] => addr_rw.DATAB
addr[5] => Equal2.IN1
addr[6] => addr_rw.DATAB
addr[6] => Equal2.IN0
rw => addr_rw.DATAB
rw => Equal2.IN7
data_wr[0] => data_tx.DATAB
data_wr[0] => Mux4.IN7
data_wr[1] => data_tx.DATAB
data_wr[1] => Mux4.IN6
data_wr[2] => data_tx.DATAB
data_wr[2] => Mux4.IN5
data_wr[3] => data_tx.DATAB
data_wr[3] => Mux4.IN4
data_wr[4] => data_tx.DATAB
data_wr[4] => Mux4.IN3
data_wr[5] => data_tx.DATAB
data_wr[5] => Mux4.IN2
data_wr[6] => data_tx.DATAB
data_wr[6] => Mux4.IN1
data_wr[7] => data_tx.DATAB
data_wr[7] => Mux4.IN0
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[0] <= data_rd[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[1] <= data_rd[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[2] <= data_rd[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[3] <= data_rd[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[4] <= data_rd[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[5] <= data_rd[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[6] <= data_rd[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data_rd[7] <= data_rd[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ack_error <= ack_error~reg0.DB_MAX_OUTPUT_PORT_TYPE
sda <> sda
scl <> scl


|Maser_Vibration_Test_Jig|Maser_Mux_ADXL345:Maser_Mux_ADXL345_1
Clk => Initialization_lockout.CLK
Clk => Get_Sample_i.CLK
Clk => busy_i.CLK
Clk => no_of_chars[0].CLK
Clk => no_of_chars[1].CLK
Clk => no_of_chars[2].CLK
Clk => no_of_chars[3].CLK
Clk => no_of_chars[4].CLK
Clk => no_of_chars[5].CLK
Clk => no_of_chars[6].CLK
Clk => no_of_chars[7].CLK
Clk => SerDataOut.CLK
Clk => \uart_tx:Wait_cnt[0].CLK
Clk => \uart_tx:Wait_cnt[1].CLK
Clk => \uart_tx:Wait_cnt[2].CLK
Clk => \uart_tx:Wait_cnt[3].CLK
Clk => \uart_tx:Wait_cnt[4].CLK
Clk => \uart_tx:Wait_cnt[5].CLK
Clk => \uart_tx:bit_counter[0].CLK
Clk => \uart_tx:bit_counter[1].CLK
Clk => \uart_tx:bit_counter[2].CLK
Clk => \uart_tx:bit_counter[3].CLK
Clk => no_of_chars2send[0].CLK
Clk => no_of_chars2send[1].CLK
Clk => no_of_chars2send[2].CLK
Clk => no_of_chars2send[3].CLK
Clk => no_of_chars2send[4].CLK
Clk => no_of_chars2send[5].CLK
Clk => no_of_chars2send[6].CLK
Clk => no_of_chars2send[7].CLK
Clk => Send_Operation.CLK
Clk => send_msg.CLK
Clk => data2send[14][0].CLK
Clk => data2send[14][1].CLK
Clk => data2send[14][2].CLK
Clk => data2send[14][3].CLK
Clk => data2send[14][4].CLK
Clk => data2send[14][5].CLK
Clk => data2send[14][6].CLK
Clk => data2send[14][7].CLK
Clk => data2send[13][0].CLK
Clk => data2send[13][1].CLK
Clk => data2send[13][2].CLK
Clk => data2send[13][3].CLK
Clk => data2send[13][4].CLK
Clk => data2send[13][5].CLK
Clk => data2send[13][6].CLK
Clk => data2send[13][7].CLK
Clk => data2send[12][0].CLK
Clk => data2send[12][1].CLK
Clk => data2send[12][2].CLK
Clk => data2send[12][3].CLK
Clk => data2send[12][4].CLK
Clk => data2send[12][5].CLK
Clk => data2send[12][6].CLK
Clk => data2send[12][7].CLK
Clk => data2send[11][0].CLK
Clk => data2send[11][1].CLK
Clk => data2send[11][2].CLK
Clk => data2send[11][3].CLK
Clk => data2send[11][4].CLK
Clk => data2send[11][5].CLK
Clk => data2send[11][6].CLK
Clk => data2send[11][7].CLK
Clk => data2send[10][0].CLK
Clk => data2send[10][1].CLK
Clk => data2send[10][2].CLK
Clk => data2send[10][3].CLK
Clk => data2send[10][4].CLK
Clk => data2send[10][5].CLK
Clk => data2send[10][6].CLK
Clk => data2send[10][7].CLK
Clk => data2send[9][0].CLK
Clk => data2send[9][1].CLK
Clk => data2send[9][2].CLK
Clk => data2send[9][3].CLK
Clk => data2send[9][4].CLK
Clk => data2send[9][5].CLK
Clk => data2send[9][6].CLK
Clk => data2send[9][7].CLK
Clk => data2send[8][0].CLK
Clk => data2send[8][1].CLK
Clk => data2send[8][2].CLK
Clk => data2send[8][3].CLK
Clk => data2send[8][4].CLK
Clk => data2send[8][5].CLK
Clk => data2send[8][6].CLK
Clk => data2send[8][7].CLK
Clk => data2send[7][0].CLK
Clk => data2send[7][1].CLK
Clk => data2send[7][2].CLK
Clk => data2send[7][3].CLK
Clk => data2send[7][4].CLK
Clk => data2send[7][5].CLK
Clk => data2send[7][6].CLK
Clk => data2send[7][7].CLK
Clk => data2send[6][0].CLK
Clk => data2send[6][1].CLK
Clk => data2send[6][2].CLK
Clk => data2send[6][3].CLK
Clk => data2send[6][4].CLK
Clk => data2send[6][5].CLK
Clk => data2send[6][6].CLK
Clk => data2send[6][7].CLK
Clk => data2send[5][0].CLK
Clk => data2send[5][1].CLK
Clk => data2send[5][2].CLK
Clk => data2send[5][3].CLK
Clk => data2send[5][4].CLK
Clk => data2send[5][5].CLK
Clk => data2send[5][6].CLK
Clk => data2send[5][7].CLK
Clk => data2send[4][0].CLK
Clk => data2send[4][1].CLK
Clk => data2send[4][2].CLK
Clk => data2send[4][3].CLK
Clk => data2send[4][4].CLK
Clk => data2send[4][5].CLK
Clk => data2send[4][6].CLK
Clk => data2send[4][7].CLK
Clk => data2send[3][0].CLK
Clk => data2send[3][1].CLK
Clk => data2send[3][2].CLK
Clk => data2send[3][3].CLK
Clk => data2send[3][4].CLK
Clk => data2send[3][5].CLK
Clk => data2send[3][6].CLK
Clk => data2send[3][7].CLK
Clk => data2send[2][0].CLK
Clk => data2send[2][1].CLK
Clk => data2send[2][2].CLK
Clk => data2send[2][3].CLK
Clk => data2send[2][4].CLK
Clk => data2send[2][5].CLK
Clk => data2send[2][6].CLK
Clk => data2send[2][7].CLK
Clk => data2send[1][0].CLK
Clk => data2send[1][1].CLK
Clk => data2send[1][2].CLK
Clk => data2send[1][3].CLK
Clk => data2send[1][4].CLK
Clk => data2send[1][5].CLK
Clk => data2send[1][6].CLK
Clk => data2send[1][7].CLK
Clk => data2send[0][0].CLK
Clk => data2send[0][1].CLK
Clk => data2send[0][2].CLK
Clk => data2send[0][3].CLK
Clk => data2send[0][4].CLK
Clk => data2send[0][5].CLK
Clk => data2send[0][6].CLK
Clk => data2send[0][7].CLK
Clk => tx_state~7.DATAIN
RST_I => send_msg.ACLR
RST_I => data2send[14][0].ACLR
RST_I => data2send[14][1].ACLR
RST_I => data2send[14][2].ACLR
RST_I => data2send[14][3].ACLR
RST_I => data2send[14][4].ACLR
RST_I => data2send[14][5].ACLR
RST_I => data2send[14][6].ACLR
RST_I => data2send[14][7].ACLR
RST_I => data2send[13][0].ACLR
RST_I => data2send[13][1].ACLR
RST_I => data2send[13][2].ACLR
RST_I => data2send[13][3].ACLR
RST_I => data2send[13][4].ACLR
RST_I => data2send[13][5].ACLR
RST_I => data2send[13][6].ACLR
RST_I => data2send[13][7].ACLR
RST_I => data2send[12][0].ACLR
RST_I => data2send[12][1].ACLR
RST_I => data2send[12][2].ACLR
RST_I => data2send[12][3].ACLR
RST_I => data2send[12][4].ACLR
RST_I => data2send[12][5].ACLR
RST_I => data2send[12][6].ACLR
RST_I => data2send[12][7].ACLR
RST_I => data2send[11][0].ACLR
RST_I => data2send[11][1].ACLR
RST_I => data2send[11][2].ACLR
RST_I => data2send[11][3].ACLR
RST_I => data2send[11][4].ACLR
RST_I => data2send[11][5].ACLR
RST_I => data2send[11][6].ACLR
RST_I => data2send[11][7].ACLR
RST_I => data2send[10][0].ACLR
RST_I => data2send[10][1].ACLR
RST_I => data2send[10][2].ACLR
RST_I => data2send[10][3].ACLR
RST_I => data2send[10][4].ACLR
RST_I => data2send[10][5].ACLR
RST_I => data2send[10][6].ACLR
RST_I => data2send[10][7].ACLR
RST_I => data2send[9][0].ACLR
RST_I => data2send[9][1].ACLR
RST_I => data2send[9][2].ACLR
RST_I => data2send[9][3].ACLR
RST_I => data2send[9][4].ACLR
RST_I => data2send[9][5].ACLR
RST_I => data2send[9][6].ACLR
RST_I => data2send[9][7].ACLR
RST_I => data2send[8][0].ACLR
RST_I => data2send[8][1].ACLR
RST_I => data2send[8][2].ACLR
RST_I => data2send[8][3].ACLR
RST_I => data2send[8][4].ACLR
RST_I => data2send[8][5].ACLR
RST_I => data2send[8][6].ACLR
RST_I => data2send[8][7].ACLR
RST_I => data2send[7][0].ACLR
RST_I => data2send[7][1].ACLR
RST_I => data2send[7][2].ACLR
RST_I => data2send[7][3].ACLR
RST_I => data2send[7][4].ACLR
RST_I => data2send[7][5].ACLR
RST_I => data2send[7][6].ACLR
RST_I => data2send[7][7].ACLR
RST_I => data2send[6][0].ACLR
RST_I => data2send[6][1].ACLR
RST_I => data2send[6][2].ACLR
RST_I => data2send[6][3].ACLR
RST_I => data2send[6][4].ACLR
RST_I => data2send[6][5].ACLR
RST_I => data2send[6][6].ACLR
RST_I => data2send[6][7].ACLR
RST_I => data2send[5][0].ACLR
RST_I => data2send[5][1].ACLR
RST_I => data2send[5][2].ACLR
RST_I => data2send[5][3].ACLR
RST_I => data2send[5][4].ACLR
RST_I => data2send[5][5].ACLR
RST_I => data2send[5][6].ACLR
RST_I => data2send[5][7].ACLR
RST_I => data2send[4][0].ACLR
RST_I => data2send[4][1].ACLR
RST_I => data2send[4][2].ACLR
RST_I => data2send[4][3].ACLR
RST_I => data2send[4][4].ACLR
RST_I => data2send[4][5].ACLR
RST_I => data2send[4][6].ACLR
RST_I => data2send[4][7].ACLR
RST_I => data2send[3][0].ACLR
RST_I => data2send[3][1].ACLR
RST_I => data2send[3][2].ACLR
RST_I => data2send[3][3].ACLR
RST_I => data2send[3][4].ACLR
RST_I => data2send[3][5].ACLR
RST_I => data2send[3][6].ACLR
RST_I => data2send[3][7].ACLR
RST_I => data2send[2][0].ACLR
RST_I => data2send[2][1].ACLR
RST_I => data2send[2][2].ACLR
RST_I => data2send[2][3].ACLR
RST_I => data2send[2][4].ACLR
RST_I => data2send[2][5].ACLR
RST_I => data2send[2][6].ACLR
RST_I => data2send[2][7].ACLR
RST_I => data2send[1][0].ACLR
RST_I => data2send[1][1].ACLR
RST_I => data2send[1][2].ACLR
RST_I => data2send[1][3].ACLR
RST_I => data2send[1][4].ACLR
RST_I => data2send[1][5].ACLR
RST_I => data2send[1][6].ACLR
RST_I => data2send[1][7].ACLR
RST_I => data2send[0][0].ACLR
RST_I => data2send[0][1].ACLR
RST_I => data2send[0][2].ACLR
RST_I => data2send[0][3].ACLR
RST_I => data2send[0][4].ACLR
RST_I => data2send[0][5].ACLR
RST_I => data2send[0][6].ACLR
RST_I => data2send[0][7].ACLR
RST_I => Initialization_lockout.ACLR
RST_I => Get_Sample_i.ACLR
RST_I => busy_i.ACLR
RST_I => no_of_chars[0].ACLR
RST_I => no_of_chars[1].ACLR
RST_I => no_of_chars[2].ACLR
RST_I => no_of_chars[3].ACLR
RST_I => no_of_chars[4].ACLR
RST_I => no_of_chars[5].ACLR
RST_I => no_of_chars[6].ACLR
RST_I => no_of_chars[7].ACLR
RST_I => SerDataOut.PRESET
RST_I => \uart_tx:Wait_cnt[0].ACLR
RST_I => \uart_tx:Wait_cnt[1].ACLR
RST_I => \uart_tx:Wait_cnt[2].ACLR
RST_I => \uart_tx:Wait_cnt[3].ACLR
RST_I => \uart_tx:Wait_cnt[4].ACLR
RST_I => \uart_tx:Wait_cnt[5].ACLR
RST_I => \uart_tx:bit_counter[0].ACLR
RST_I => \uart_tx:bit_counter[1].ACLR
RST_I => \uart_tx:bit_counter[2].ACLR
RST_I => \uart_tx:bit_counter[3].ACLR
RST_I => tx_state~9.DATAIN
RST_I => Send_Operation.ENA
RST_I => no_of_chars2send[7].ENA
RST_I => no_of_chars2send[6].ENA
RST_I => no_of_chars2send[5].ENA
RST_I => no_of_chars2send[4].ENA
RST_I => no_of_chars2send[3].ENA
RST_I => no_of_chars2send[2].ENA
RST_I => no_of_chars2send[1].ENA
RST_I => no_of_chars2send[0].ENA
UART_TXD <= SerDataOut.DB_MAX_OUTPUT_PORT_TYPE
Busy <= busy_i.DB_MAX_OUTPUT_PORT_TYPE
Get_Sample <= Get_Sample_i.DB_MAX_OUTPUT_PORT_TYPE
Initialation_Status => Get_Sample_i.OUTPUTSELECT
Initialation_Status => uart_tx.IN1
Initialation_Status => Initialization_lockout.DATAIN
ADXL345_X_1[0] => data2send[2][0].DATAIN
ADXL345_X_1[1] => data2send[2][1].DATAIN
ADXL345_X_1[2] => data2send[2][2].DATAIN
ADXL345_X_1[3] => data2send[2][3].DATAIN
ADXL345_X_1[4] => data2send[2][4].DATAIN
ADXL345_X_1[5] => data2send[2][5].DATAIN
ADXL345_X_1[6] => data2send[2][6].DATAIN
ADXL345_X_1[7] => data2send[2][7].DATAIN
ADXL345_X_1[8] => data2send[3][0].DATAIN
ADXL345_X_1[9] => data2send[3][1].DATAIN
ADXL345_X_1[10] => data2send[3][2].DATAIN
ADXL345_X_1[11] => data2send[3][3].DATAIN
ADXL345_X_1[12] => data2send[3][4].DATAIN
ADXL345_X_1[13] => data2send[3][5].DATAIN
ADXL345_X_1[14] => data2send[3][6].DATAIN
ADXL345_X_1[15] => data2send[3][7].DATAIN
ADXL345_Y_1[0] => data2send[5][0].DATAIN
ADXL345_Y_1[1] => data2send[5][1].DATAIN
ADXL345_Y_1[2] => data2send[5][2].DATAIN
ADXL345_Y_1[3] => data2send[5][3].DATAIN
ADXL345_Y_1[4] => data2send[5][4].DATAIN
ADXL345_Y_1[5] => data2send[5][5].DATAIN
ADXL345_Y_1[6] => data2send[5][6].DATAIN
ADXL345_Y_1[7] => data2send[5][7].DATAIN
ADXL345_Y_1[8] => data2send[6][0].DATAIN
ADXL345_Y_1[9] => data2send[6][1].DATAIN
ADXL345_Y_1[10] => data2send[6][2].DATAIN
ADXL345_Y_1[11] => data2send[6][3].DATAIN
ADXL345_Y_1[12] => data2send[6][4].DATAIN
ADXL345_Y_1[13] => data2send[6][5].DATAIN
ADXL345_Y_1[14] => data2send[6][6].DATAIN
ADXL345_Y_1[15] => data2send[6][7].DATAIN
ADXL345_Z_1[0] => data2send[8][0].DATAIN
ADXL345_Z_1[1] => data2send[8][1].DATAIN
ADXL345_Z_1[2] => data2send[8][2].DATAIN
ADXL345_Z_1[3] => data2send[8][3].DATAIN
ADXL345_Z_1[4] => data2send[8][4].DATAIN
ADXL345_Z_1[5] => data2send[8][5].DATAIN
ADXL345_Z_1[6] => data2send[8][6].DATAIN
ADXL345_Z_1[7] => data2send[8][7].DATAIN
ADXL345_Z_1[8] => data2send[9][0].DATAIN
ADXL345_Z_1[9] => data2send[9][1].DATAIN
ADXL345_Z_1[10] => data2send[9][2].DATAIN
ADXL345_Z_1[11] => data2send[9][3].DATAIN
ADXL345_Z_1[12] => data2send[9][4].DATAIN
ADXL345_Z_1[13] => data2send[9][5].DATAIN
ADXL345_Z_1[14] => data2send[9][6].DATAIN
ADXL345_Z_1[15] => data2send[9][7].DATAIN
Fifo_CTL_1[0] => data2send[11][0].DATAIN
Fifo_CTL_1[1] => data2send[11][1].DATAIN
Fifo_CTL_1[2] => data2send[11][2].DATAIN
Fifo_CTL_1[3] => data2send[11][3].DATAIN
Fifo_CTL_1[4] => data2send[11][4].DATAIN
Fifo_CTL_1[5] => data2send[11][5].DATAIN
Fifo_CTL_1[6] => data2send[11][6].DATAIN
Fifo_CTL_1[7] => data2send[11][7].DATAIN
Fifo_Status_1[0] => data2send[12][0].DATAIN
Fifo_Status_1[1] => data2send[12][1].DATAIN
Fifo_Status_1[2] => data2send[12][2].DATAIN
Fifo_Status_1[3] => data2send[12][3].DATAIN
Fifo_Status_1[4] => data2send[12][4].DATAIN
Fifo_Status_1[5] => data2send[12][5].DATAIN
Fifo_Status_1[6] => data2send[12][6].DATAIN
Fifo_Status_1[7] => data2send[12][7].DATAIN
Baud_Rate_Enable => SerDataOut.OUTPUTSELECT
Baud_Rate_Enable => tx_state.OUTPUTSELECT
Baud_Rate_Enable => tx_state.OUTPUTSELECT
Baud_Rate_Enable => tx_state.OUTPUTSELECT
Baud_Rate_Enable => tx_state.OUTPUTSELECT
Baud_Rate_Enable => tx_state.OUTPUTSELECT
Baud_Rate_Enable => tx_state.OUTPUTSELECT
Baud_Rate_Enable => bit_counter.OUTPUTSELECT
Baud_Rate_Enable => bit_counter.OUTPUTSELECT
Baud_Rate_Enable => bit_counter.OUTPUTSELECT
Baud_Rate_Enable => bit_counter.OUTPUTSELECT
Baud_Rate_Enable => tx_state.OUTPUTSELECT
Baud_Rate_Enable => tx_state.OUTPUTSELECT
Baud_Rate_Enable => tx_state.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => SerDataOut.OUTPUTSELECT
Baud_Rate_Enable => Wait_cnt.OUTPUTSELECT
Baud_Rate_Enable => Wait_cnt.OUTPUTSELECT
Baud_Rate_Enable => Wait_cnt.OUTPUTSELECT
Baud_Rate_Enable => Wait_cnt.OUTPUTSELECT
Baud_Rate_Enable => Wait_cnt.OUTPUTSELECT
Baud_Rate_Enable => Wait_cnt.OUTPUTSELECT
Baud_Rate_Enable => Get_Sample_i.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => no_of_chars.OUTPUTSELECT
Baud_Rate_Enable => busy_i.OUTPUTSELECT
Baud_Rate_Enable => tx_state.OUTPUTSELECT
Baud_Rate_Enable => tx_state.OUTPUTSELECT
Ready_1 => gen_tx_ser_data.IN1


|Maser_Vibration_Test_Jig|Baud_Rate_Generator:Baud_Rate_Generator_1
Clk => baud_rate_reload[0].CLK
Clk => baud_rate_reload[1].CLK
Clk => baud_rate_reload[2].CLK
Clk => baud_rate_reload[3].CLK
Clk => baud_rate_reload[4].CLK
Clk => baud_rate_reload[5].CLK
Clk => baud_rate_reload[6].CLK
Clk => baud_rate_reload[7].CLK
Clk => baud_rate_reload[8].CLK
Clk => baud_rate_reload[9].CLK
Clk => baud_rate_reload[10].CLK
Clk => baud_rate_reload[11].CLK
Clk => baud_rate_reload[12].CLK
Clk => Baud_Rate_Enable~reg0.CLK
Clk => \baud_rate_gen:Baud_rate_cnt[0].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[1].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[2].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[3].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[4].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[5].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[6].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[7].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[8].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[9].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[10].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[11].CLK
Clk => \baud_rate_gen:Baud_rate_cnt[12].CLK
RST_I => Baud_Rate_Enable~reg0.ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[0].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[1].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[2].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[3].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[4].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[5].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[6].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[7].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[8].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[9].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[10].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[11].ACLR
RST_I => \baud_rate_gen:Baud_rate_cnt[12].ACLR
RST_I => baud_rate_reload[0].ENA
RST_I => baud_rate_reload[12].ENA
RST_I => baud_rate_reload[11].ENA
RST_I => baud_rate_reload[10].ENA
RST_I => baud_rate_reload[9].ENA
RST_I => baud_rate_reload[8].ENA
RST_I => baud_rate_reload[7].ENA
RST_I => baud_rate_reload[6].ENA
RST_I => baud_rate_reload[5].ENA
RST_I => baud_rate_reload[4].ENA
RST_I => baud_rate_reload[3].ENA
RST_I => baud_rate_reload[2].ENA
RST_I => baud_rate_reload[1].ENA
baud_rate[0] => Mux0.IN10
baud_rate[0] => Mux1.IN10
baud_rate[0] => Mux2.IN10
baud_rate[0] => Mux3.IN10
baud_rate[0] => Mux4.IN10
baud_rate[0] => Mux6.IN10
baud_rate[0] => Mux7.IN10
baud_rate[0] => Mux8.IN10
baud_rate[0] => Mux9.IN10
baud_rate[0] => Mux11.IN10
baud_rate[0] => Mux12.IN10
baud_rate[1] => Mux0.IN9
baud_rate[1] => Mux1.IN9
baud_rate[1] => Mux2.IN9
baud_rate[1] => Mux3.IN9
baud_rate[1] => Mux4.IN9
baud_rate[1] => Mux5.IN5
baud_rate[1] => Mux6.IN9
baud_rate[1] => Mux7.IN9
baud_rate[1] => Mux8.IN9
baud_rate[1] => Mux9.IN9
baud_rate[1] => Mux10.IN5
baud_rate[1] => Mux11.IN9
baud_rate[1] => Mux12.IN9
baud_rate[2] => Mux0.IN8
baud_rate[2] => Mux1.IN8
baud_rate[2] => Mux2.IN8
baud_rate[2] => Mux3.IN8
baud_rate[2] => Mux4.IN8
baud_rate[2] => Mux5.IN4
baud_rate[2] => Mux6.IN8
baud_rate[2] => Mux7.IN8
baud_rate[2] => Mux8.IN8
baud_rate[2] => Mux9.IN8
baud_rate[2] => Mux10.IN4
baud_rate[2] => Mux11.IN8
baud_rate[2] => Mux12.IN8
Baud_Rate_Enable <= Baud_Rate_Enable~reg0.DB_MAX_OUTPUT_PORT_TYPE


